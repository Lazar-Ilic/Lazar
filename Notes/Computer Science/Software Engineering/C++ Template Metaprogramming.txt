Preface



Acknowledgments



Dave's Acknowledgments



Aleksey's Acknowledgments



Making The Most Of This Book



Supplementary Material



Trying It Out



Chapter 1. Introduction



Section 1.1. Getting Started



Section 1.2. So What's A Metaprogram?



Section 1.3. Metaprogramming In The Host Language



Section 1.4. Metaprogramming In C++

OK

Section 1.5. Why Metaprogramming?

OK

Section 1.6. When Metaprogramming?

OK

Section 1.7. Why A Metaprogramming Library?

OK

Chapter 2. Traits And Type Manipulation



Section 2.1. Type Associations



Section 2.2. Metafunctions

OK hmmm interesting. First skim lowkey read.

Section 2.3. Numerical Metafunctions



Section 2.4. Making Choices At Compile Time

OK

OK

Section 2.5. A Brief Tour Of The Boost Type Traits Library

OK

Section 2.6. Nullary Metafunctions

OK

Section 2.7. Metafunction Definition



Section 2.8. History

OK

Section 2.9. Details

OK

Section 2.10. Exercises

OK

Chapter 3. A Deeper Look At Metafunctions



Section 3.1. Dimensional Analysis

OK

Section 3.2. Higher-Order Metafunctions

OK

Section 3.3. Handling Placeholders

OK

Section 3.4. More Lambda Capabilities

OK

Section 3.5. Lambda Details

OK

Section 3.6. Details

OK

Section 3.7. Exercises



Chapter 4. Integral Type Wrappers And Operations

OK

Section 4.1. Boolean Wrappers And Operations

OK

Section 4.2. Integer Wrappers And Operations

OK

Section 4.3. Exercises

OK

Chapter 5. Sequences And Iterators

OK

Section 5.1. Concepts

OK

Section 5.2. Sequences And Algorithms

OK

Section 5.3. Iterators

OK

Section 5.4. Iterator Concepts

OK

Section 5.5. Sequence Concepts

OK

Section 5.6. Sequence Equality

OK

Section 5.7. Intrinsic Sequence Operations

OK

Section 5.8. Sequence Classes

OK

Section 5.9. Integral Sequence Wrappers

OK

Section 5.10. Sequence Derivation

OK

Section 5.11. Writing Your Own Sequence

OK

Section 5.12. Details

OK

Section 5.13. Exercises

OK

Chapter 6. Algorithms

OK

Section 6.1. Algorithms, Idioms, Reuse, And Abstraction

OK

Section 6.2. Algorithms In The MPL

OK

Section 6.3. Inserters

OK

Section 6.4. Fundamental Sequence Algorithms

OK

Section 6.5. Querying Algorithms

OK

Section 6.6. Sequence Building Algorithms

OK

Section 6.7. Writing Your Own Algorithms

OK

Section 6.8. Details

OK

Section 6.9. Exercises



Chapter 7. Views And Iterator Adaptors

OK

Section 7.1. A Few Examples

OK

Section 7.2. View Concept



Section 7.3. Iterator Adaptors



Section 7.4. Writing Your Own View

OK

Section 7.5. History



Section 7.6. Exercises



Chapter 8. Diagnostics

OK

Section 8.1. Debugging The Error Novel

OK

Section 8.2. Using Tools For Diagnostic Analysis



Section 8.3. Intentional Diagnostic Generation



Section 8.4. History

OK

Section 8.5. Details



Section 8.6. Exercises



Chapter 9. Crossing The Compile-Time/Runtime Boundary

OK

Section 9.1. for_each



Section 9.2. Implementation Selection



Section 9.3. Object Generators



Section 9.4. Structure Selection



Section 9.5. Class Composition

OK

Section 9.6. [Member] Function Pointers As Template Arguments

OK

Section 9.7. Type Erasure



Section 9.8. The Curiously Recurring Template Pattern



Section 9.9. Explicitly Managing The Overload Set



Section 9.10. The "sizeof Trick"

OK

Section 9.11. Summary

OK

Section 9.12. Exercises



Chapter 10. Domain-Specific Embedded Languages



Section 10.1. A Little Language ...

OK

Section 10.2. ... Goes A Long Way

OK

Section 10.3. DSLs, Inside Out



Section 10.4. C++ As The Host Language

OK

Section 10.5. Blitz++ And Expression Templates



Section 10.6. General-Purpose DSELs

OK

Section 10.7. The Boost Spirit Library



Section 10.8. Summary

OK

Section 10.9. Exercises



Chapter 11. A DSEL Design Walkthrough



Section 11.1. Finite State Machines

OK

Section 11.2. Framework Design Goals

OK

Section 11.3. Framework Interface Basics



Section 11.4. Choosing A DSL



Section 11.5. Implementation

OK

Section 11.6. Analysis



Section 11.7. Language Directions



Section 11.8. Exercises



Appendix A. An Introduction To Preprocessor Metaprogramming

OK

Section A.1. Motivation

OK

Section A.2. Fundamental Abstractions Of The Preprocessor

OK

Section A.3. Preprocessor Library Structure

OK

Section A.4. Preprocessor Library Abstractions

OK

Section A.5. Exercise

OK

Appendix B. The typename And Template Keywords

OK

Section B.1. The Issue

OK

Section B.2. The Rules

OK

Appendix C. Compile-Time Performance

OK

Section C.1. The Computational Model

OK

Section C.2. Managing Compilation Time

OK

Section C.3. The Tests

OK

Appendix D. MPL Portability Summary

OK

CD-ROM Warranty



Bibliography

